import axios from 'axios'

const OPENROUTER_API_KEY = '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'
const OPENROUTER_BASE_URL = 'https://openrouter.ai/api/v1'

export const analyzeCaloriesFromImage = async (imageBase64: string): Promise<any> => {
  try {
    const response = await axios.post(
      `${OPENROUTER_BASE_URL}/chat/completions`,
      {
        model: 'openai/gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: `–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ —Å 20-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ–¥—ã –∏ –¥–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–æ—á–Ω—É—é –æ—Ü–µ–Ω–∫—É –ø–∏—Ç–∞—Ç–µ–ª—å–Ω–æ–π —Ü–µ–Ω–Ω–æ—Å—Ç–∏.

–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∏–∑—É—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –æ–ø–∏—à–∏ —á—Ç–æ –≤–∏–¥–∏—à—å, –∑–∞—Ç–µ–º –¥–∞–π –æ—Ü–µ–Ω–∫—É.

–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞:

{
  "dish_name": "—Ç–æ—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å —Ä–∏—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏')",
  "portion_weight": 200,
  "calories": 350,
  "protein": 28,
  "fats": 8,
  "carbs": 35,
  "description": "–¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–∏–º—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –∏ —Å–ø–æ—Å–æ–±–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è",
  "recommendations": "–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é"
}

–ü–†–ê–í–ò–õ–ê –ê–ù–ê–õ–ò–ó–ê:
1. –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ –≤—Å–µ –≤–∏–¥–∏–º—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
2. –û—Ü–µ–Ω–∏ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ –ø–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫ —Ç–∞—Ä–µ–ª–∫–µ/–ø–æ—Å—É–¥–µ  
3. –£—á—Ç–∏ —Å–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–∂–∞—Ä–µ–Ω–æ–µ, –≤–∞—Ä–µ–Ω–æ–µ, –∑–∞–ø–µ—á–µ–Ω–Ω–æ–µ)
4. –î–∞–π —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ—Ä—Ü–∏–π
5. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π "N/A" - –≤—Å–µ–≥–¥–∞ –¥–∞–≤–∞–π —á–∏—Å–ª–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏
6. –ë–µ–ª–∫–∏: 15-40–≥, –ñ–∏—Ä—ã: 5-25–≥, –£–≥–ª–µ–≤–æ–¥—ã: 20-60–≥, –ö–∞–ª–æ—Ä–∏–∏: 200-800

–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –æ—Ç–≤–µ—Ç–∞:
{"dish_name":"–ì—Ä–µ—á–Ω–µ–≤–∞—è –∫–∞—à–∞ —Å –∫—É—Ä–∏—Ü–µ–π","portion_weight":250,"calories":420,"protein":32,"fats":12,"carbs":45,"description":"–ü–æ—Ä—Ü–∏—è –≥—Ä–µ—á–Ω–µ–≤–æ–π –∫–∞—à–∏ —Å –∫—É—Å–æ—á–∫–∞–º–∏ –æ—Ç–≤–∞—Ä–Ω–æ–π –∫—É—Ä–∏–Ω–æ–π –≥—Ä—É–¥–∫–∏","recommendations":"–û—Ç–ª–∏—á–Ω—ã–π —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏–µ–º –ø–∏—â–∏"}`
          },
          {
            role: 'user',
            content: [
              {
                type: 'text',
                text: '–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ–¥—ã. –û–ø—Ä–µ–¥–µ–ª–∏ —á—Ç–æ —ç—Ç–æ –∑–∞ –±–ª—é–¥–æ, –æ—Ü–µ–Ω–∏ —Ä–∞–∑–º–µ—Ä –ø–æ—Ä—Ü–∏–∏ –∏ —Ä–∞—Å—Å—á–∏—Ç–∞–π –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—É—é —Ü–µ–Ω–Ω–æ—Å—Ç—å. –û—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ –∫–∞–∫ –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –ø—Ä–∏–º–µ—Ä–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π N/A.'
              },
              {
                type: 'image_url',
                image_url: {
                  url: `data:image/jpeg;base64,${imageBase64}`
                }
              }
            ]
          }
        ],
        max_tokens: 500,
        temperature: 0.1
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
          'HTTP-Referer': window.location.origin,
          'X-Title': 'BodyGoal App'
        }
      }
    )
    
    const content = response.data.choices[0].message.content
    
    // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    console.log('–û—Ç–≤–µ—Ç –æ—Ç OpenRouter API:', content)
    
    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
      const parsed = JSON.parse(content)
      console.log('–£—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω JSON:', parsed)
      return parsed
    } catch (parseError) {
      console.log('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError)
      console.log('–ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞...')
      
      // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON, –ø—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞
      const fallbackData = {
        dish_name: extractValue(content, /–±–ª—é–¥–æ[:\s]*([^\n]+)/i) || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –±–ª—é–¥–æ',
        portion_weight: extractValue(content, /–≤–µ—Å[:\s]*(\d+)/i) || 150,
        calories: extractValue(content, /–∫–∞–ª–æ—Ä–∏–∏?[:\s]*(\d+)/i) || 250,
        protein: extractValue(content, /–±–µ–ª–∫–∏?[:\s]*(\d+)/i) || 15,
        fats: extractValue(content, /–∂–∏—Ä—ã?[:\s]*(\d+)/i) || 10,
        carbs: extractValue(content, /—É–≥–ª–µ–≤–æ–¥—ã?[:\s]*(\d+)/i) || 30,
        description: '–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ –±–ª—é–¥–∞',
        recommendations: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —É—á–µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ä–∞—Ü–∏–æ–Ω–∞'
      }
      
      console.log('Fallback –¥–∞–Ω–Ω—ã–µ:', fallbackData)
      return fallbackData
    }
  } catch (error: any) {
    if (error.response) {
      if (error.response.status === 401) {
        throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.')
      } else if (error.response.status === 429) {
        throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
      } else if (error.response.status === 400) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∞.')
      }
    }

    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
const extractValue = (text: string, regex: RegExp): string | null => {
  const match = text.match(regex)
  return match ? match[1].trim() : null
}

export const convertImageToBase64 = (file: File): Promise<string> => {
  return new Promise((resolve, reject) => {
    const canvas = document.createElement('canvas')
    const ctx = canvas.getContext('2d')
    const img = new Image()
    
    img.onload = () => {
      // –£—Å—Ç–∞–Ω–æ–≤–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
      const maxWidth = 800
      const maxHeight = 600
      
      let { width, height } = img
      
      // –ü—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
      if (width > maxWidth || height > maxHeight) {
        const ratio = Math.min(maxWidth / width, maxHeight / height)
        width = width * ratio
        height = height * ratio
      }
      
      canvas.width = width
      canvas.height = height
      
      // –†–∏—Å—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ canvas
      ctx?.drawImage(img, 0, 0, width, height)
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64 —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –∫–∞—á–µ—Å—Ç–≤–∞
      const dataURL = canvas.toDataURL('image/jpeg', 0.8)
      const base64 = dataURL.split(',')[1]
      resolve(base64)
    }
    
    img.onerror = reject
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ data URL
    const reader = new FileReader()
    reader.onload = (e) => {
      img.src = e.target?.result as string
    }
    reader.onerror = reject
    reader.readAsDataURL(file)
  })
}


export interface UserProfile {
  age: number
  weight: number
  height: number
  gender: 'male' | 'female'
  activity_level: 'sedentary' | 'light' | 'moderate' | 'active' | 'very_active'
  goal: 'lose' | 'maintain' | 'gain'
  target_weight?: number
  tdee: number
}

export interface MealPlanRequest {
  profile: UserProfile
  preferences?: string[]
  restrictions?: string[]
  cuisine?: string
  budget?: 'low' | 'medium' | 'high'
}

export interface AlternativeRequest {
  originalPlan: string
  reason: string
  preferences?: string[]
}


export const generateAIMealPlan = async (request: MealPlanRequest): Promise<string> => {
  try {
    const { profile, preferences = [], restrictions = [], cuisine = '', budget = 'medium' } = request


    let targetCalories = profile.tdee
    if (profile.goal === 'lose') {
      targetCalories = profile.tdee - 500
    } else if (profile.goal === 'gain') {
      targetCalories = profile.tdee + 300
    }


    const prompt = `–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –æ–¥–∏–Ω –¥–µ–Ω—å –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏:

–ü–†–û–§–ò–õ–¨:
- –í–æ–∑—Ä–∞—Å—Ç: ${profile.age} –ª–µ—Ç
- –ü–æ–ª: ${profile.gender === 'male' ? '–º—É–∂—Å–∫–æ–π' : '–∂–µ–Ω—Å–∫–∏–π'}
- –†–æ—Å—Ç: ${profile.height} —Å–º
- –í–µ—Å: ${profile.weight} –∫–≥
- –£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${getActivityLevelText(profile.activity_level)}
- –¶–µ–ª—å: ${getGoalText(profile.goal)}${profile.target_weight ? ` (—Ü–µ–ª–µ–≤–æ–π –≤–µ—Å: ${profile.target_weight} –∫–≥)` : ''}
- –ö–î–ê–ñ: ${profile.tdee.toFixed(0)} –∫–∞–ª–æ—Ä–∏–π
- –¶–µ–ª–µ–≤—ã–µ –∫–∞–ª–æ—Ä–∏–∏: ${targetCalories.toFixed(0)} –∫–∞–ª–æ—Ä–∏–π/–¥–µ–Ω—å

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
${preferences.length > 0 ? `- –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: ${preferences.join(', ')}` : ''}
${restrictions.length > 0 ? `- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${restrictions.join(', ')}` : ''}
${cuisine ? `- –ö—É—Ö–Ω—è: ${cuisine}` : ''}
- –ë—é–¥–∂–µ—Ç: ${budget === 'low' ? '—ç–∫–æ–Ω–æ–º–Ω—ã–π' : budget === 'high' ? '–ø—Ä–µ–º–∏—É–º' : '—Å—Ä–µ–¥–Ω–∏–π'}

–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:

üåÖ –ó–ê–í–¢–†–ê–ö (25% –æ—Ç –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π - ${Math.round(targetCalories * 0.25)} –∫–∫–∞–ª)
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
  - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
  - –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–∫—Ä–∞—Ç–∫–æ)
  - –ö–∞–ª–æ—Ä–∏–∏: XXX –∫–∫–∞–ª | –ë: XX–≥ | –ñ: XX–≥ | –£: XX–≥

üåû –û–ë–ï–î (35% –æ—Ç –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π - ${Math.round(targetCalories * 0.35)} –∫–∫–∞–ª)
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
  - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
  - –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–∫—Ä–∞—Ç–∫–æ)
  - –ö–∞–ª–æ—Ä–∏–∏: XXX –∫–∫–∞–ª | –ë: XX–≥ | –ñ: XX–≥ | –£: XX–≥

üåô –£–ñ–ò–ù (30% –æ—Ç –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π - ${Math.round(targetCalories * 0.30)} –∫–∫–∞–ª)
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞
  - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º
  - –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è (–∫—Ä–∞—Ç–∫–æ)
  - –ö–∞–ª–æ—Ä–∏–∏: XXX –∫–∫–∞–ª | –ë: XX–≥ | –ñ: XX–≥ | –£: XX–≥

üçé –ü–ï–†–ï–ö–£–° (10% –æ—Ç –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π - ${Math.round(targetCalories * 0.10)} –∫–∫–∞–ª)
‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ
  - –°–æ—Å—Ç–∞–≤
  - –ö–∞–ª–æ—Ä–∏–∏: XXX –∫–∫–∞–ª | –ë: XX–≥ | –ñ: XX–≥ | –£: XX–≥

üìä –ò–¢–û–ì–û –ó–ê –î–ï–ù–¨:
–ö–∞–ª–æ—Ä–∏–∏: ~${targetCalories} –∫–∫–∞–ª
–ë–µ–ª–∫–∏: XX–≥ (XX%)
–ñ–∏—Ä—ã: XX–≥ (XX%)
–£–≥–ª–µ–≤–æ–¥—ã: XX–≥ (XX%)

üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:
- –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Å–æ–±–ª—é–¥–µ–Ω–∏—é –ø–ª–∞–Ω–∞
- –°–æ–≤–µ—Ç—ã –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–∏—ë–º–∞ –ø–∏—â–∏

–°–æ–∑–¥–∞–π —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –≤–∫—É—Å–Ω—ã–π –∏ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø–ª–∞–Ω —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏.`

    const response = await axios.post(
      `${OPENROUTER_BASE_URL}/chat/completions`,
      {
        model: 'openai/gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: '–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥ –∏ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –°–æ–∑–¥–∞—ë—à—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è, —É—á–∏—Ç—ã–≤–∞—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏, —Ü–µ–ª–∏ –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –û—Ç–≤–µ—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        max_tokens: 2000,
        temperature: 0.7
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
          'HTTP-Referer': window.location.origin,
          'X-Title': 'BodyGoal App'
        }
      }
    )
    return response.data.choices[0].message.content
  } catch (error: any) {
    if (error.response) {
      if (error.response.status === 401) {
        throw new Error('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.')
      } else if (error.response.status === 429) {
        throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
      } else if (error.response.status === 400) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞.')
      }
    }

    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  }
}


export const generateMealAlternatives = async (request: AlternativeRequest): Promise<string> => {
  try {
    const { originalPlan, reason, preferences = [] } = request

    const prompt = `–°–æ–∑–¥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ:

–ò–°–•–û–î–ù–´–ô –ü–õ–ê–ù:
${originalPlan}

–ü–†–ò–ß–ò–ù–ê –ò–ó–ú–ï–ù–ï–ù–ò–Ø:
${reason}

${preferences.length > 0 ? `–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø:
${preferences.join(', ')}` : ''}

–ó–ê–î–ê–ß–ê:
–°–æ–∑–¥–∞–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å —É—á—ë—Ç–æ–º —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–∏—á–∏–Ω—ã, —Å–æ—Ö—Ä–∞–Ω—è—è:
- –û–±—â—É—é –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç—å –∏ –±–∞–ª–∞–Ω—Å –ë–ñ–£
- –°—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∏—Ç–∞–Ω–∏—è (–∑–∞–≤—Ç—Ä–∞–∫, –æ–±–µ–¥, —É–∂–∏–Ω, –ø–µ—Ä–µ–∫—É—Å)
- –§–æ—Ä–º–∞—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è

–ü—Ä–µ–¥–ª–æ–∂–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–º–µ–Ω—ã –±–ª—é–¥ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º, –ø–æ—á–µ–º—É —ç—Ç–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –ª—É—á—à–µ –ø–æ–¥—Ö–æ–¥—è—Ç.

–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, —á—Ç–æ –∏ –∏—Å—Ö–æ–¥–Ω—ã–π –ø–ª–∞–Ω.`

    const response = await axios.post(
      `${OPENROUTER_BASE_URL}/chat/completions`,
      {
        model: 'openai/gpt-4o-mini',
        messages: [
          {
            role: 'system',
            content: '–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –¥–∏–µ—Ç–æ–ª–æ–≥. –°–æ–∑–¥–∞—ë—à—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø–ª–∞–Ω—ã –ø–∏—Ç–∞–Ω–∏—è, —É—á–∏—Ç—ã–≤–∞—è –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤. –û—Ç–≤–µ—á–∞–µ—à—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.'
          },
          {
            role: 'user',
            content: prompt
          }
        ],
        max_tokens: 1500,
        temperature: 0.8
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
          'HTTP-Referer': window.location.origin,
          'X-Title': 'BodyGoal App'
        }
      }
    )
    return response.data.choices[0].message.content
  } catch (error: any) {
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
  }
}


const getActivityLevelText = (level: string): string => {
  switch (level) {
    case 'sedentary': return '–º–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π'
    case 'light': return '–ª—ë–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
    case 'moderate': return '—É–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
    case 'active': return '–∞–∫—Ç–∏–≤–Ω—ã–π'
    case 'very_active': return '–æ—á–µ–Ω—å –∞–∫—Ç–∏–≤–Ω—ã–π'
    default: return level
  }
}

const getGoalText = (goal: string): string => {
  switch (goal) {
    case 'lose': return '—Å–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞'
    case 'maintain': return '–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞'
    case 'gain': return '–Ω–∞–±–æ—Ä –≤–µ—Å–∞'
    default: return goal
  }
}
